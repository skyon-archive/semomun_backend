name: Deploy to AWS Elastic Beanstalk (dev)

on:
  push:
    branches: [ dev ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      REGION: ap-northeast-2
      IMAGE: semomun/backend-dev
      APP_NAME: semomun-backend
      ENV_NAME: semomun-backend-dev
      VERSION: 1
      DB_HOST: aurora-dev.db.semomun.com
      REDIS_HOST: redis://redis-dev.mxpiww.ng.0001.apn2.cache.amazonaws.com:6379

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ACTION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ACTION }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.IMAGE }}
          IMAGE_TAG: ${{ env.VERSION }}
        with:
          context: .
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          network: host

      - name: Make .env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DB_HOST: ${{ env.DB_HOST }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_REDIS_HOST: ${{ env.REDIS_HOST }}
          envkey_GOOGLE_CLIENT_ID_APP: 688270638151-kgmitk0qq9k734nq7nh9jl6adhd00b57.apps.googleusercontent.com
          envkey_GOOGLE_CLIENT_ID_WEB: 15666773031-sk2p92o3nba4qmisghqj09bho9jqpnqi.apps.googleusercontent.com
          envkey_APPLE_CLIENT_ID_APP: com.skyon.semomun
          envkey_APPLE_CLIENT_ID_WEB: com.semomun.web
          envkey_HOST: 0.0.0.0
          envkey_PORT: 8080
          envkey_UPLOAD_SOURCE: /tmp
          envkey_LOG_SOURCE: /tmp/logs
          envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
          envkey_SALT: 11
          envkey_DB_DATABASE: semomun-backend
          envkey_DB_USERNAME: node
          envkey_DB_DIALECT: mysql
          envkey_PHONE_NUMBER: 01071282316
          envkey_SMS_SERVICE_ID: ncp:sms:kr:263493214013:semomun
          envkey_SMS_ACCESS_KEY: mrx10KUxW8tEd26GMbop
          envkey_SMS_SECRET_KEY: ${{ secrets.SMS_SECRET_KEY }}
          envkey_S3_BUCKET: semomun-data-test
          envkey_AWS_REGION: ${{ env.REGION }}
          envkey_AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          envkey_AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          envkey_SLACK_CHANNEL: C03BUV6A4FJ
          envkey_SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          directory: .deploy/dev

      - name: Prepare deployment package
        run: |
          cd .deploy/dev && zip -r deploy.zip . && cd ../..

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ACTION }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY_ACTION }}
          application_name: ${{ env.APP_NAME }}
          environment_name: ${{ env.ENV_NAME }}
          version_label: ${{ github.run_number }}
          version_description: ${{ github.SHA }} - ${{ github.event.head_commit.message }}
          region: ${{ env.REGION }}
          deployment_package: .deploy/dev/deploy.zip
          wait_for_environment_recovery: 360
          use_existing_version_if_available: false

      - name: Notify
        uses: 8398a7/action-slack@v3
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          username: github-actions
          channel: '#3-github-action'
        if: always()